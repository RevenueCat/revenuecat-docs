version: 2.1

orbs:
  revenuecat: revenuecat/sdks-common-config@2.2.0
  node: circleci/node@5.1.0
  android: circleci/android@2.3.0

aliases:
  syncing-branches: &syncing-branches
    filters:
      tags:
        ignore: /.*/
      branches:
        only: /^sync\/.*/
  non-syncing-branches: &non-syncing-branches
    filters:
      tags:
        ignore: /.*/
      branches:
        ignore:
          - /^sync\/.*/
          - main

commands:
  setup-git-credentials:
    steps:
      - run:
          name: Setup Git config
          command: |
            git config user.email $GIT_EMAIL
            git config user.name $GIT_USERNAME

  trust-github-key:
    steps:
      - run:
          name: Trust GitHub key
          command: |
            for ip in $(dig @8.8.8.8 github.com +short); \
            do ssh-keyscan github.com,$ip; \
            ssh-keyscan $ip; \
            done 2>/dev/null >> ~/.ssh/known_hosts

  install-sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            if curl -s "https://get.sdkman.io?rcupdate=false" | bash; then
              echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
              source $BASH_ENV
            else
              echo "Error installing SDKMAN, continuing with default Java" >&2
            fi
      - run:
          name: Setup Java environment
          command: |
            if ! sdk env install; then
              echo "Error installing Java SDK through SDKMAN, continuing with default Java" >&2
            fi

jobs:
  preview-docs:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Render modified docs
          command: bundle exec fastlane preview_rendered_docs
      - store_artifacts:
          path: temp
          destination: temp
      - run:
          name: Post artifacts as comment
          command: bundle exec fastlane post_circleci_artifacts

  check-rendering:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Check rendered docs can render
          command: bundle exec fastlane embed_code_blocks

  check-categories:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Check rendered docs have categories
          command: bundle exec fastlane check_docs_categories

  sync-files-if-syncing-pr:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - when:
          condition:
            not:
              equal: [ /^sync\/.*/, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Skipping syncing since this is a not syncing branch
                command:
                    echo "Skipping syncing since this is a not syncing branch"
      - when:
          condition:
            equal: [ /^sync\/.*/, << pipeline.git.branch >> ]
          steps:
            - checkout
            - node/install:
                install-yarn: false
                node-version: "16.13.1"
            - revenuecat/install-gem-unix-dependencies:
                cache-version: v1
            - run:
                name: Install rdme
                command: npm install -g rdme@8.6.4
            - run:
                name: Syncing files to Readme
                command: |
                  bundle exec fastlane sync_files_to_readme readme_api_key:$README_API_KEY

  open-syncing-pr:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Render docs
          command: |
            bundle exec fastlane open_syncing_pr github_pr_token:$GITHUB_TOKEN readme_api_key:$README_API_KEY

  build-projects-macos:
    resource_class: macos.x86.medium.gen2
    macos:
      xcode: 14.3.0
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - run:
          name: Build Swift project
          working_directory: projects/iOS/DocsTester
          command: swift build

  build-projects-android:
    executor:
      name: android/android-machine
      resource-class: medium
      tag: 2021.10.1
    steps:
      - checkout
      - install-sdkman
      - android/restore-gradle-cache:
          cache-prefix: v1a
      - run:
          name: Build Android project
          working_directory: projects/android
          command: ./gradlew assembleDebug
      - android/save-gradle-cache:
          cache-prefix: v1a

  run-tests:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Run tests
          command: bundle exec rspec

workflows:
  version: 2

  open-syncing-pr:
    jobs:
      - open-syncing-pr:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: main

  sync:
    jobs:
      - check-categories: *syncing-branches
      - manual-approval-to-sync-with-readme:
          type: approval
          requires:
            - check-categories
          <<: *syncing-branches
      - sync-files-if-syncing-pr:
          requires:
            - manual-approval-to-sync-with-readme
          <<: *syncing-branches

  no-op-sync:
    jobs:
      - sync-files-if-syncing-pr: *non-syncing-branches

  test:
    jobs:
      - check-rendering: *non-syncing-branches
      - preview-docs: *non-syncing-branches
      - run-tests
      - build-projects-macos
      - build-projects-android